{"version":3,"sources":["components/catImages/CatImages.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["catImages","props","react_default","a","createElement","className","alt","name","src","image","onClick","handleIncrement","id","Wrapper","children","Title","App","state","cats","score","highscore","resetScore","_this","setState","console","log","this","forEach","cat","count","find","o","i","sort","Math","random","_this2","class","mb-0","h1","components_Wrapper_Wrapper","components_Title_Title","map","CatImages","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0zDAaeA,SARG,SAAAC,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,QAAS,kBAAMT,EAAMU,gBAAgBV,EAAMW,WCH1EC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,mBC4ErCE,oNAtEbC,MAAQ,CACNC,KAAMA,EACNC,MAAO,EACPC,UAAW,KAMbC,WAAa,WAUX,OATIC,EAAKL,MAAME,MAAQG,EAAKL,MAAMG,WAChCE,EAAKC,SAAS,CAACH,UAAWE,EAAKL,MAAME,OAAQ,WAC3CK,QAAQC,IAAIC,KAAKT,MAAMG,aAG3BE,EAAKL,MAAMC,KAAKS,QAAQ,SAAAC,GACtBA,EAAIC,MAAQ,IAEdP,EAAKC,SAAS,CAACJ,MAAO,KACf,KAGTR,gBAAkB,SAAAC,GAChBU,EAAKL,MAAMC,KAAKY,KAAK,SAACC,EAAGC,GACvB,GAAID,EAAEnB,KAAOA,EAAI,CACf,GAAsB,IAAlBM,EAAKc,GAAGH,MAOV,OANAX,EAAKc,GAAGH,MAAQX,EAAKc,GAAGH,MAAQ,EAChCP,EAAKC,SAAS,CAAEJ,MAAOG,EAAKL,MAAME,MAAQ,GAAK,WAC7CK,QAAQC,IAAIC,KAAKT,MAAME,SAGzBG,EAAKL,MAAMC,KAAKe,KAAK,kBAAMC,KAAKC,SAAW,MACpC,EAEPb,EAAKD,yFAQJ,IAAAe,EAAAV,KACP,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,QAAMiC,MAAM,eAAeC,QAAA,EAAKC,IAAE,GAACrC,EAAAC,EAAAC,cAAA,0BACnCF,EAAAC,EAAAC,cAAA,QAAMiC,MAAM,8BAAZ,IAA0CnC,EAAAC,EAAAC,cAAA,uCAC1CF,EAAAC,EAAAC,cAAA,QAAMiC,MAAM,2BAA0BnC,EAAAC,EAAAC,cAAA,oBAAYsB,KAAKT,MAAME,MAAvB,iBAA4CO,KAAKT,MAAMG,UAAvD,OAExClB,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,KAAOvC,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,wFAGDsB,KAAKT,MAAMC,KAAKwB,IAAI,SAAAd,GAAG,OACtB1B,EAAAC,EAAAC,cAACuC,EAAD,CACE/B,GAAIgB,EAAIhB,GACRgC,IAAKhB,EAAIhB,GACTH,MAAOmB,EAAInB,MACXE,gBAAiByB,EAAKzB,6BA9DlBkC,oBCFlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.080ae031.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./catImages.css\";\n\n\n\nconst catImages = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} onClick={() => props.handleIncrement(props.id)}/>\n    </div>\n  </div>\n);\n\nexport default catImages;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport CatImages from \"./components/catImages/CatImages\"\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport cats from \"./cats.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.cats to the cats json array\n  state = {\n    cats: cats,\n    score: 0,\n    highscore: 0\n  };\n  // The application should keep track of the user's score. \n  // The user's score should be reset to 0 if they click the same image more than once.\n  // Once the user's score is reset after an incorrect guess, the game should restart\n\n  resetScore = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cats.forEach(cat => {\n      cat.count = 0;\n    });\n    this.setState({score: 0});\n    return true;\n  }\n  // The user's score should be incremented when clicking an image for the first time. \n  handleIncrement = id => {\n    this.state.cats.find((o, i) => {\n      if (o.id === id) {\n        if (cats[i].count === 0) {\n          cats[i].count = cats[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          // Every time an image is clicked, the images rendered to the page should shuffle themselves in a random order.\n          this.state.cats.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.resetScore();\n        }\n      }\n    })\n  }\n  \n\n  //Map over this.state.cats and render a cat image componenet for each cat object\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-primary\">\n          <span class=\"navbar-brand\" mb-0 h1><h2>Clicky Game</h2></span>\n          <span class=\"nav justify-content-center\"> <h2>Click an image to begin!</h2></span>\n          <span class=\"nav justify-content-end\"><h2>Score: {this.state.score} | Top Score: {this.state.highscore} </h2></span>\n        </nav>\n        <Wrapper>\n          <Title><div>\n            <h4>Click on an image to earn points, but don't click on any more than once!</h4>\n          </div></Title>\n\n          {this.state.cats.map(cat => (\n            <CatImages\n              id={cat.id}\n              key={cat.id}\n              image={cat.image}\n              handleIncrement={this.handleIncrement}\n\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}